#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ATM_Tiketing
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ticketing_system_DB")]
	public partial class TicketingSystemDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAngajati(Angajati instance);
    partial void UpdateAngajati(Angajati instance);
    partial void DeleteAngajati(Angajati instance);
    partial void InsertAngajati_Departamente(Angajati_Departamente instance);
    partial void UpdateAngajati_Departamente(Angajati_Departamente instance);
    partial void DeleteAngajati_Departamente(Angajati_Departamente instance);
    partial void InsertDepartamente(Departamente instance);
    partial void UpdateDepartamente(Departamente instance);
    partial void DeleteDepartamente(Departamente instance);
    partial void InsertTichete(Tichete instance);
    partial void UpdateTichete(Tichete instance);
    partial void DeleteTichete(Tichete instance);
    partial void InsertUtilizatori(Utilizatori instance);
    partial void UpdateUtilizatori(Utilizatori instance);
    partial void DeleteUtilizatori(Utilizatori instance);
    #endregion
		
		public TicketingSystemDBDataContext() : 
				base(global::ATM_Tiketing.Properties.Settings.Default.ticketing_system_DBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TicketingSystemDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TicketingSystemDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TicketingSystemDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TicketingSystemDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Angajati> Angajatis
		{
			get
			{
				return this.GetTable<Angajati>();
			}
		}
		
		public System.Data.Linq.Table<Angajati_Departamente> Angajati_Departamentes
		{
			get
			{
				return this.GetTable<Angajati_Departamente>();
			}
		}
		
		public System.Data.Linq.Table<Departamente> Departamentes
		{
			get
			{
				return this.GetTable<Departamente>();
			}
		}
		
		public System.Data.Linq.Table<Tichete> Tichetes
		{
			get
			{
				return this.GetTable<Tichete>();
			}
		}
		
		public System.Data.Linq.Table<Utilizatori> Utilizatoris
		{
			get
			{
				return this.GetTable<Utilizatori>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.VerificaUtilizator")]
		public int VerificaUtilizator([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string mail, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string parola, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExistaUtilizator", DbType="Bit")] ref System.Nullable<bool> existaUtilizator)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mail, parola, existaUtilizator);
			existaUtilizator = ((System.Nullable<bool>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Angajati")]
	public partial class Angajati : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_angajat;
		
		private string _nume;
		
		private string _prenume;
		
		private string _mail;
		
		private string _nr_tel;
		
		private string _parola;
		
		private int _tip;
		
		private EntitySet<Angajati_Departamente> _Angajati_Departamentes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_angajatChanging(int value);
    partial void Onid_angajatChanged();
    partial void OnnumeChanging(string value);
    partial void OnnumeChanged();
    partial void OnprenumeChanging(string value);
    partial void OnprenumeChanged();
    partial void OnmailChanging(string value);
    partial void OnmailChanged();
    partial void Onnr_telChanging(string value);
    partial void Onnr_telChanged();
    partial void OnparolaChanging(string value);
    partial void OnparolaChanged();
    partial void OntipChanging(int value);
    partial void OntipChanged();
    #endregion
		
		public Angajati()
		{
			this._Angajati_Departamentes = new EntitySet<Angajati_Departamente>(new Action<Angajati_Departamente>(this.attach_Angajati_Departamentes), new Action<Angajati_Departamente>(this.detach_Angajati_Departamentes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_angajat", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_angajat
		{
			get
			{
				return this._id_angajat;
			}
			set
			{
				if ((this._id_angajat != value))
				{
					this.Onid_angajatChanging(value);
					this.SendPropertyChanging();
					this._id_angajat = value;
					this.SendPropertyChanged("id_angajat");
					this.Onid_angajatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nume", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nume
		{
			get
			{
				return this._nume;
			}
			set
			{
				if ((this._nume != value))
				{
					this.OnnumeChanging(value);
					this.SendPropertyChanging();
					this._nume = value;
					this.SendPropertyChanged("nume");
					this.OnnumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenume", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string prenume
		{
			get
			{
				return this._prenume;
			}
			set
			{
				if ((this._prenume != value))
				{
					this.OnprenumeChanging(value);
					this.SendPropertyChanging();
					this._prenume = value;
					this.SendPropertyChanged("prenume");
					this.OnprenumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string mail
		{
			get
			{
				return this._mail;
			}
			set
			{
				if ((this._mail != value))
				{
					this.OnmailChanging(value);
					this.SendPropertyChanging();
					this._mail = value;
					this.SendPropertyChanged("mail");
					this.OnmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_tel", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nr_tel
		{
			get
			{
				return this._nr_tel;
			}
			set
			{
				if ((this._nr_tel != value))
				{
					this.Onnr_telChanging(value);
					this.SendPropertyChanging();
					this._nr_tel = value;
					this.SendPropertyChanged("nr_tel");
					this.Onnr_telChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parola", DbType="VarChar(100)")]
		public string parola
		{
			get
			{
				return this._parola;
			}
			set
			{
				if ((this._parola != value))
				{
					this.OnparolaChanging(value);
					this.SendPropertyChanging();
					this._parola = value;
					this.SendPropertyChanged("parola");
					this.OnparolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tip", DbType="Int NOT NULL")]
		public int tip
		{
			get
			{
				return this._tip;
			}
			set
			{
				if ((this._tip != value))
				{
					this.OntipChanging(value);
					this.SendPropertyChanging();
					this._tip = value;
					this.SendPropertyChanged("tip");
					this.OntipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajati_Angajati_Departamente", Storage="_Angajati_Departamentes", ThisKey="id_angajat", OtherKey="id_angajat")]
		public EntitySet<Angajati_Departamente> Angajati_Departamentes
		{
			get
			{
				return this._Angajati_Departamentes;
			}
			set
			{
				this._Angajati_Departamentes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Angajati_Departamentes(Angajati_Departamente entity)
		{
			this.SendPropertyChanging();
			entity.Angajati = this;
		}
		
		private void detach_Angajati_Departamentes(Angajati_Departamente entity)
		{
			this.SendPropertyChanging();
			entity.Angajati = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Angajati_Departamente")]
	public partial class Angajati_Departamente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_angajat_departament;
		
		private int _id_angajat;
		
		private int _id_departament;
		
		private EntityRef<Angajati> _Angajati;
		
		private EntityRef<Departamente> _Departamente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_angajat_departamentChanging(int value);
    partial void Onid_angajat_departamentChanged();
    partial void Onid_angajatChanging(int value);
    partial void Onid_angajatChanged();
    partial void Onid_departamentChanging(int value);
    partial void Onid_departamentChanged();
    #endregion
		
		public Angajati_Departamente()
		{
			this._Angajati = default(EntityRef<Angajati>);
			this._Departamente = default(EntityRef<Departamente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_angajat_departament", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_angajat_departament
		{
			get
			{
				return this._id_angajat_departament;
			}
			set
			{
				if ((this._id_angajat_departament != value))
				{
					this.Onid_angajat_departamentChanging(value);
					this.SendPropertyChanging();
					this._id_angajat_departament = value;
					this.SendPropertyChanged("id_angajat_departament");
					this.Onid_angajat_departamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_angajat", DbType="Int NOT NULL")]
		public int id_angajat
		{
			get
			{
				return this._id_angajat;
			}
			set
			{
				if ((this._id_angajat != value))
				{
					if (this._Angajati.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_angajatChanging(value);
					this.SendPropertyChanging();
					this._id_angajat = value;
					this.SendPropertyChanged("id_angajat");
					this.Onid_angajatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_departament", DbType="Int NOT NULL")]
		public int id_departament
		{
			get
			{
				return this._id_departament;
			}
			set
			{
				if ((this._id_departament != value))
				{
					if (this._Departamente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_departamentChanging(value);
					this.SendPropertyChanging();
					this._id_departament = value;
					this.SendPropertyChanged("id_departament");
					this.Onid_departamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajati_Angajati_Departamente", Storage="_Angajati", ThisKey="id_angajat", OtherKey="id_angajat", IsForeignKey=true)]
		public Angajati Angajati
		{
			get
			{
				return this._Angajati.Entity;
			}
			set
			{
				Angajati previousValue = this._Angajati.Entity;
				if (((previousValue != value) 
							|| (this._Angajati.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Angajati.Entity = null;
						previousValue.Angajati_Departamentes.Remove(this);
					}
					this._Angajati.Entity = value;
					if ((value != null))
					{
						value.Angajati_Departamentes.Add(this);
						this._id_angajat = value.id_angajat;
					}
					else
					{
						this._id_angajat = default(int);
					}
					this.SendPropertyChanged("Angajati");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamente_Angajati_Departamente", Storage="_Departamente", ThisKey="id_departament", OtherKey="id_departament", IsForeignKey=true)]
		public Departamente Departamente
		{
			get
			{
				return this._Departamente.Entity;
			}
			set
			{
				Departamente previousValue = this._Departamente.Entity;
				if (((previousValue != value) 
							|| (this._Departamente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Departamente.Entity = null;
						previousValue.Angajati_Departamentes.Remove(this);
					}
					this._Departamente.Entity = value;
					if ((value != null))
					{
						value.Angajati_Departamentes.Add(this);
						this._id_departament = value.id_departament;
					}
					else
					{
						this._id_departament = default(int);
					}
					this.SendPropertyChanged("Departamente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departamente")]
	public partial class Departamente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_departament;
		
		private string _departament;
		
		private EntitySet<Angajati_Departamente> _Angajati_Departamentes;
		
		private EntitySet<Tichete> _Tichetes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_departamentChanging(int value);
    partial void Onid_departamentChanged();
    partial void OndepartamentChanging(string value);
    partial void OndepartamentChanged();
    #endregion
		
		public Departamente()
		{
			this._Angajati_Departamentes = new EntitySet<Angajati_Departamente>(new Action<Angajati_Departamente>(this.attach_Angajati_Departamentes), new Action<Angajati_Departamente>(this.detach_Angajati_Departamentes));
			this._Tichetes = new EntitySet<Tichete>(new Action<Tichete>(this.attach_Tichetes), new Action<Tichete>(this.detach_Tichetes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_departament", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_departament
		{
			get
			{
				return this._id_departament;
			}
			set
			{
				if ((this._id_departament != value))
				{
					this.Onid_departamentChanging(value);
					this.SendPropertyChanging();
					this._id_departament = value;
					this.SendPropertyChanged("id_departament");
					this.Onid_departamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departament", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string departament
		{
			get
			{
				return this._departament;
			}
			set
			{
				if ((this._departament != value))
				{
					this.OndepartamentChanging(value);
					this.SendPropertyChanging();
					this._departament = value;
					this.SendPropertyChanged("departament");
					this.OndepartamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamente_Angajati_Departamente", Storage="_Angajati_Departamentes", ThisKey="id_departament", OtherKey="id_departament")]
		public EntitySet<Angajati_Departamente> Angajati_Departamentes
		{
			get
			{
				return this._Angajati_Departamentes;
			}
			set
			{
				this._Angajati_Departamentes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamente_Tichete", Storage="_Tichetes", ThisKey="id_departament", OtherKey="id_departament")]
		public EntitySet<Tichete> Tichetes
		{
			get
			{
				return this._Tichetes;
			}
			set
			{
				this._Tichetes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Angajati_Departamentes(Angajati_Departamente entity)
		{
			this.SendPropertyChanging();
			entity.Departamente = this;
		}
		
		private void detach_Angajati_Departamentes(Angajati_Departamente entity)
		{
			this.SendPropertyChanging();
			entity.Departamente = null;
		}
		
		private void attach_Tichetes(Tichete entity)
		{
			this.SendPropertyChanging();
			entity.Departamente = this;
		}
		
		private void detach_Tichetes(Tichete entity)
		{
			this.SendPropertyChanging();
			entity.Departamente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tichete")]
	public partial class Tichete : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_tichet;
		
		private int _id_utilizator;
		
		private int _id_departament;
		
		private string _subiect;
		
		private string _descriere;
		
		private int _prioritate;
		
		private int _stare;
		
		private System.DateTime _data_tichet;
		
		private string _solutie;
		
		private EntityRef<Departamente> _Departamente;
		
		private EntityRef<Utilizatori> _Utilizatori;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_tichetChanging(int value);
    partial void Onid_tichetChanged();
    partial void Onid_utilizatorChanging(int value);
    partial void Onid_utilizatorChanged();
    partial void Onid_departamentChanging(int value);
    partial void Onid_departamentChanged();
    partial void OnsubiectChanging(string value);
    partial void OnsubiectChanged();
    partial void OndescriereChanging(string value);
    partial void OndescriereChanged();
    partial void OnprioritateChanging(int value);
    partial void OnprioritateChanged();
    partial void OnstareChanging(int value);
    partial void OnstareChanged();
    partial void Ondata_tichetChanging(System.DateTime value);
    partial void Ondata_tichetChanged();
    partial void OnsolutieChanging(string value);
    partial void OnsolutieChanged();
    #endregion
		
		public Tichete()
		{
			this._Departamente = default(EntityRef<Departamente>);
			this._Utilizatori = default(EntityRef<Utilizatori>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tichet", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_tichet
		{
			get
			{
				return this._id_tichet;
			}
			set
			{
				if ((this._id_tichet != value))
				{
					this.Onid_tichetChanging(value);
					this.SendPropertyChanging();
					this._id_tichet = value;
					this.SendPropertyChanged("id_tichet");
					this.Onid_tichetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_utilizator", DbType="Int NOT NULL")]
		public int id_utilizator
		{
			get
			{
				return this._id_utilizator;
			}
			set
			{
				if ((this._id_utilizator != value))
				{
					if (this._Utilizatori.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_utilizatorChanging(value);
					this.SendPropertyChanging();
					this._id_utilizator = value;
					this.SendPropertyChanged("id_utilizator");
					this.Onid_utilizatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_departament", DbType="Int NOT NULL")]
		public int id_departament
		{
			get
			{
				return this._id_departament;
			}
			set
			{
				if ((this._id_departament != value))
				{
					if (this._Departamente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_departamentChanging(value);
					this.SendPropertyChanging();
					this._id_departament = value;
					this.SendPropertyChanged("id_departament");
					this.Onid_departamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subiect", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string subiect
		{
			get
			{
				return this._subiect;
			}
			set
			{
				if ((this._subiect != value))
				{
					this.OnsubiectChanging(value);
					this.SendPropertyChanging();
					this._subiect = value;
					this.SendPropertyChanged("subiect");
					this.OnsubiectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descriere", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string descriere
		{
			get
			{
				return this._descriere;
			}
			set
			{
				if ((this._descriere != value))
				{
					this.OndescriereChanging(value);
					this.SendPropertyChanging();
					this._descriere = value;
					this.SendPropertyChanged("descriere");
					this.OndescriereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prioritate", DbType="Int NOT NULL")]
		public int prioritate
		{
			get
			{
				return this._prioritate;
			}
			set
			{
				if ((this._prioritate != value))
				{
					this.OnprioritateChanging(value);
					this.SendPropertyChanging();
					this._prioritate = value;
					this.SendPropertyChanged("prioritate");
					this.OnprioritateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stare", DbType="Int NOT NULL")]
		public int stare
		{
			get
			{
				return this._stare;
			}
			set
			{
				if ((this._stare != value))
				{
					this.OnstareChanging(value);
					this.SendPropertyChanging();
					this._stare = value;
					this.SendPropertyChanged("stare");
					this.OnstareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_tichet", DbType="Date NOT NULL")]
		public System.DateTime data_tichet
		{
			get
			{
				return this._data_tichet;
			}
			set
			{
				if ((this._data_tichet != value))
				{
					this.Ondata_tichetChanging(value);
					this.SendPropertyChanging();
					this._data_tichet = value;
					this.SendPropertyChanged("data_tichet");
					this.Ondata_tichetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solutie", DbType="VarChar(1000)")]
		public string solutie
		{
			get
			{
				return this._solutie;
			}
			set
			{
				if ((this._solutie != value))
				{
					this.OnsolutieChanging(value);
					this.SendPropertyChanging();
					this._solutie = value;
					this.SendPropertyChanged("solutie");
					this.OnsolutieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamente_Tichete", Storage="_Departamente", ThisKey="id_departament", OtherKey="id_departament", IsForeignKey=true)]
		public Departamente Departamente
		{
			get
			{
				return this._Departamente.Entity;
			}
			set
			{
				Departamente previousValue = this._Departamente.Entity;
				if (((previousValue != value) 
							|| (this._Departamente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Departamente.Entity = null;
						previousValue.Tichetes.Remove(this);
					}
					this._Departamente.Entity = value;
					if ((value != null))
					{
						value.Tichetes.Add(this);
						this._id_departament = value.id_departament;
					}
					else
					{
						this._id_departament = default(int);
					}
					this.SendPropertyChanged("Departamente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizatori_Tichete", Storage="_Utilizatori", ThisKey="id_utilizator", OtherKey="id_utilizator", IsForeignKey=true)]
		public Utilizatori Utilizatori
		{
			get
			{
				return this._Utilizatori.Entity;
			}
			set
			{
				Utilizatori previousValue = this._Utilizatori.Entity;
				if (((previousValue != value) 
							|| (this._Utilizatori.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizatori.Entity = null;
						previousValue.Tichetes.Remove(this);
					}
					this._Utilizatori.Entity = value;
					if ((value != null))
					{
						value.Tichetes.Add(this);
						this._id_utilizator = value.id_utilizator;
					}
					else
					{
						this._id_utilizator = default(int);
					}
					this.SendPropertyChanged("Utilizatori");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilizatori")]
	public partial class Utilizatori : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_utilizator;
		
		private string _nume;
		
		private string _prenume;
		
		private string _mail;
		
		private string _nr_tel;
		
		private string _parola;
		
		private int _tip;
		
		private EntitySet<Tichete> _Tichetes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_utilizatorChanging(int value);
    partial void Onid_utilizatorChanged();
    partial void OnnumeChanging(string value);
    partial void OnnumeChanged();
    partial void OnprenumeChanging(string value);
    partial void OnprenumeChanged();
    partial void OnmailChanging(string value);
    partial void OnmailChanged();
    partial void Onnr_telChanging(string value);
    partial void Onnr_telChanged();
    partial void OnparolaChanging(string value);
    partial void OnparolaChanged();
    partial void OntipChanging(int value);
    partial void OntipChanged();
    #endregion
		
		public Utilizatori()
		{
			this._Tichetes = new EntitySet<Tichete>(new Action<Tichete>(this.attach_Tichetes), new Action<Tichete>(this.detach_Tichetes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_utilizator", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_utilizator
		{
			get
			{
				return this._id_utilizator;
			}
			set
			{
				if ((this._id_utilizator != value))
				{
					this.Onid_utilizatorChanging(value);
					this.SendPropertyChanging();
					this._id_utilizator = value;
					this.SendPropertyChanged("id_utilizator");
					this.Onid_utilizatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nume", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nume
		{
			get
			{
				return this._nume;
			}
			set
			{
				if ((this._nume != value))
				{
					this.OnnumeChanging(value);
					this.SendPropertyChanging();
					this._nume = value;
					this.SendPropertyChanged("nume");
					this.OnnumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenume", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string prenume
		{
			get
			{
				return this._prenume;
			}
			set
			{
				if ((this._prenume != value))
				{
					this.OnprenumeChanging(value);
					this.SendPropertyChanging();
					this._prenume = value;
					this.SendPropertyChanged("prenume");
					this.OnprenumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string mail
		{
			get
			{
				return this._mail;
			}
			set
			{
				if ((this._mail != value))
				{
					this.OnmailChanging(value);
					this.SendPropertyChanging();
					this._mail = value;
					this.SendPropertyChanged("mail");
					this.OnmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_tel", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nr_tel
		{
			get
			{
				return this._nr_tel;
			}
			set
			{
				if ((this._nr_tel != value))
				{
					this.Onnr_telChanging(value);
					this.SendPropertyChanging();
					this._nr_tel = value;
					this.SendPropertyChanged("nr_tel");
					this.Onnr_telChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parola", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string parola
		{
			get
			{
				return this._parola;
			}
			set
			{
				if ((this._parola != value))
				{
					this.OnparolaChanging(value);
					this.SendPropertyChanging();
					this._parola = value;
					this.SendPropertyChanged("parola");
					this.OnparolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tip", DbType="Int NOT NULL")]
		public int tip
		{
			get
			{
				return this._tip;
			}
			set
			{
				if ((this._tip != value))
				{
					this.OntipChanging(value);
					this.SendPropertyChanging();
					this._tip = value;
					this.SendPropertyChanged("tip");
					this.OntipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizatori_Tichete", Storage="_Tichetes", ThisKey="id_utilizator", OtherKey="id_utilizator")]
		public EntitySet<Tichete> Tichetes
		{
			get
			{
				return this._Tichetes;
			}
			set
			{
				this._Tichetes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tichetes(Tichete entity)
		{
			this.SendPropertyChanging();
			entity.Utilizatori = this;
		}
		
		private void detach_Tichetes(Tichete entity)
		{
			this.SendPropertyChanging();
			entity.Utilizatori = null;
		}
	}
}
#pragma warning restore 1591
